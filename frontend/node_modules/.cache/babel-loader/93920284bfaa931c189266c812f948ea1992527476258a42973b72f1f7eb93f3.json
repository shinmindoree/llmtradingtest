{"ast":null,"code":"var _jsxFileName = \"/Users/minsuk/Documents/GitHub/LLMTrading/frontend/src/components/OpenAITest.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OpenAITest = () => {\n  _s();\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleTest = async () => {\n    setLoading(true);\n    setResult('');\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/generate-code', {\n        strategy: 'BTC 가격이 5% 상승하면 매수, 2% 하락하면 매도',\n        capital: 10000,\n        stopLoss: 2,\n        takeProfit: 5\n      });\n      setResult(response.data.code);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setResult((_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && _err$response$data.detail ? `에러: ${err.response.data.detail}` : '알 수 없는 에러');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '2rem',\n      padding: '1rem',\n      border: '1px solid #ccc'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"OpenAI API \\uD14C\\uC2A4\\uD2B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTest,\n      disabled: loading,\n      children: loading ? '테스트 중...' : 'OpenAI API 호출 테스트'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        marginTop: '1rem',\n        background: '#222',\n        color: '#fff',\n        padding: '1rem',\n        borderRadius: '8px',\n        overflowX: 'auto'\n      },\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(OpenAITest, \"+f+5BVLsSkcBSMc6rpBNO90CVC0=\");\n_c = OpenAITest;\nexport default OpenAITest;\nvar _c;\n$RefreshReg$(_c, \"OpenAITest\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","OpenAITest","_s","result","setResult","loading","setLoading","handleTest","response","post","strategy","capital","stopLoss","takeProfit","data","code","err","_err$response","_err$response$data","detail","style","marginTop","padding","border","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","background","color","borderRadius","overflowX","_c","$RefreshReg$"],"sources":["/Users/minsuk/Documents/GitHub/LLMTrading/frontend/src/components/OpenAITest.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst OpenAITest = () => {\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleTest = async () => {\n    setLoading(true);\n    setResult('');\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/generate-code', {\n        strategy: 'BTC 가격이 5% 상승하면 매수, 2% 하락하면 매도',\n        capital: 10000,\n        stopLoss: 2,\n        takeProfit: 5,\n      });\n      setResult(response.data.code);\n    } catch (err) {\n      setResult(\n        err.response?.data?.detail\n          ? `에러: ${err.response.data.detail}`\n          : '알 수 없는 에러'\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{marginTop: '2rem', padding: '1rem', border: '1px solid #ccc'}}>\n      <h3>OpenAI API 테스트</h3>\n      <button onClick={handleTest} disabled={loading}>\n        {loading ? '테스트 중...' : 'OpenAI API 호출 테스트'}\n      </button>\n      {result && (\n        <pre style={{marginTop: '1rem', background: '#222', color: '#fff', padding: '1rem', borderRadius: '8px', overflowX: 'auto'}}>\n          {result}\n        </pre>\n      )}\n    </div>\n  );\n};\n\nexport default OpenAITest; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BD,UAAU,CAAC,IAAI,CAAC;IAChBF,SAAS,CAAC,EAAE,CAAC;IACb,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,qCAAqC,EAAE;QACvEC,QAAQ,EAAE,gCAAgC;QAC1CC,OAAO,EAAE,KAAK;QACdC,QAAQ,EAAE,CAAC;QACXC,UAAU,EAAE;MACd,CAAC,CAAC;MACFT,SAAS,CAACI,QAAQ,CAACM,IAAI,CAACC,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZd,SAAS,CACP,CAAAa,aAAA,GAAAD,GAAG,CAACR,QAAQ,cAAAS,aAAA,gBAAAC,kBAAA,GAAZD,aAAA,CAAcH,IAAI,cAAAI,kBAAA,eAAlBA,kBAAA,CAAoBC,MAAM,GACtB,OAAOH,GAAG,CAACR,QAAQ,CAACM,IAAI,CAACK,MAAM,EAAE,GACjC,WACN,CAAC;IACH,CAAC,SAAS;MACRb,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKoB,KAAK,EAAE;MAACC,SAAS,EAAE,MAAM;MAAEC,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAgB,CAAE;IAAAC,QAAA,gBACzExB,OAAA;MAAAwB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB5B,OAAA;MAAQ6B,OAAO,EAAEtB,UAAW;MAACuB,QAAQ,EAAEzB,OAAQ;MAAAmB,QAAA,EAC5CnB,OAAO,GAAG,UAAU,GAAG;IAAmB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EACRzB,MAAM,iBACLH,OAAA;MAAKoB,KAAK,EAAE;QAACC,SAAS,EAAE,MAAM;QAAEU,UAAU,EAAE,MAAM;QAAEC,KAAK,EAAE,MAAM;QAAEV,OAAO,EAAE,MAAM;QAAEW,YAAY,EAAE,KAAK;QAAEC,SAAS,EAAE;MAAM,CAAE;MAAAV,QAAA,EACzHrB;IAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAvCID,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAyChB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}