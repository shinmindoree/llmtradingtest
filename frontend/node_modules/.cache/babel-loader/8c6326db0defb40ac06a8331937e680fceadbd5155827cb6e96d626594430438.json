{"ast":null,"code":"var _jsxFileName = \"/Users/minsuk/Documents/GitHub/LLMTrading/frontend/src/components/BTCUSDTChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BTCChart = () => {\n  _s();\n  const chartContainerRef = useRef(null);\n  const chartRef = useRef(null);\n  const candlestickSeriesRef = useRef(null);\n  const lineSeriesRef = useRef(null);\n  const [lastPrice, setLastPrice] = useState(null);\n  useEffect(() => {\n    if (chartContainerRef.current) {\n      // 차트 생성\n      const chart = createChart(chartContainerRef.current, {\n        width: chartContainerRef.current.clientWidth,\n        height: 400,\n        layout: {\n          background: {\n            color: '#1E222D'\n          },\n          textColor: '#DDD'\n        },\n        grid: {\n          vertLines: {\n            color: '#2B2B43'\n          },\n          horzLines: {\n            color: '#363C4E'\n          }\n        },\n        timeScale: {\n          timeVisible: true,\n          secondsVisible: false\n        }\n      });\n\n      // 캔들스틱 시리즈 추가\n      const candlestickSeries = chart.addCandlestickSeries({\n        upColor: '#26a69a',\n        downColor: '#ef5350',\n        borderVisible: false,\n        wickUpColor: '#26a69a',\n        wickDownColor: '#ef5350'\n      });\n\n      // 라인 시리즈 추가\n      const lineSeries = chart.addLineSeries({\n        color: '#2962FF',\n        lineWidth: 2\n      });\n\n      // 참조 저장\n      candlestickSeriesRef.current = candlestickSeries;\n      lineSeriesRef.current = lineSeries;\n\n      // 차트 리사이징 핸들러\n      const handleResize = () => {\n        if (chartContainerRef.current && chartRef.current) {\n          chartRef.current.applyOptions({\n            width: chartContainerRef.current.clientWidth\n          });\n        }\n      };\n\n      // 데이터 가져오기\n      fetch('https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1h&limit=1000').then(res => res.json()).then(data => {\n        const cdata = data.map(d => {\n          return {\n            time: d[0] / 1000,\n            open: parseFloat(d[1]),\n            high: parseFloat(d[2]),\n            low: parseFloat(d[3]),\n            close: parseFloat(d[4])\n          };\n        });\n\n        // 캔들스틱 데이터 설정\n        candlestickSeries.setData(cdata);\n\n        // 라인 시리즈 데이터 설정 (종가 기준)\n        const lineData = cdata.map(item => ({\n          time: item.time,\n          value: item.close\n        }));\n        lineSeries.setData(lineData);\n\n        // 최신 가격 저장\n        if (cdata.length > 0) {\n          const lastCandle = cdata[cdata.length - 1];\n          setLastPrice(lastCandle.close);\n\n          // 지지선과 저항선 계산 (간단한 예: 최근 종가의 ±5%)\n          const supportPrice = lastCandle.close * 0.95;\n          const resistancePrice = lastCandle.close * 1.05;\n\n          // 가격선 추가\n          // 현재가 표시\n          candlestickSeries.createPriceLine({\n            price: lastCandle.close,\n            color: '#FFD700',\n            lineWidth: 2,\n            lineStyle: 0,\n            // 실선\n            axisLabelVisible: true,\n            title: '현재가'\n          });\n\n          // 지지선 표시\n          candlestickSeries.createPriceLine({\n            price: supportPrice,\n            color: '#26a69a',\n            lineWidth: 1,\n            lineStyle: 2,\n            // 점선\n            axisLabelVisible: true,\n            title: '지지선'\n          });\n\n          // 저항선 표시\n          candlestickSeries.createPriceLine({\n            price: resistancePrice,\n            color: '#ef5350',\n            lineWidth: 1,\n            lineStyle: 2,\n            // 점선\n            axisLabelVisible: true,\n            title: '저항선'\n          });\n        }\n\n        // 차트 표시 영역 조정\n        chart.timeScale().fitContent();\n      }).catch(err => console.error('데이터 불러오기 오류:', err));\n\n      // 리사이징 이벤트 리스너 등록\n      window.addEventListener('resize', handleResize);\n\n      // 참조 저장\n      chartRef.current = chart;\n\n      // 컴포넌트 언마운트 시 정리\n      return () => {\n        window.removeEventListener('resize', handleResize);\n        chart.remove();\n      };\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chartContainerRef,\n      style: {\n        width: '100%',\n        height: '400px',\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), lastPrice && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#FFD700',\n          fontWeight: 'bold'\n        },\n        children: [\"\\uD604\\uC7AC BTC/USDT \\uAC00\\uACA9: $\", lastPrice.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(BTCChart, \"MJCwu0o8Mb2cpiJXnrVCxiwlDvo=\");\n_c = BTCChart;\nexport default BTCChart;\nvar _c;\n$RefreshReg$(_c, \"BTCChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","createChart","jsxDEV","_jsxDEV","BTCChart","_s","chartContainerRef","chartRef","candlestickSeriesRef","lineSeriesRef","lastPrice","setLastPrice","current","chart","width","clientWidth","height","layout","background","color","textColor","grid","vertLines","horzLines","timeScale","timeVisible","secondsVisible","candlestickSeries","addCandlestickSeries","upColor","downColor","borderVisible","wickUpColor","wickDownColor","lineSeries","addLineSeries","lineWidth","handleResize","applyOptions","fetch","then","res","json","data","cdata","map","d","time","open","parseFloat","high","low","close","setData","lineData","item","value","length","lastCandle","supportPrice","resistancePrice","createPriceLine","price","lineStyle","axisLabelVisible","title","fitContent","catch","err","console","error","window","addEventListener","removeEventListener","remove","children","ref","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","fontWeight","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/minsuk/Documents/GitHub/LLMTrading/frontend/src/components/BTCUSDTChart.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { createChart } from 'lightweight-charts';\n\nconst BTCChart = () => {\n  const chartContainerRef = useRef(null);\n  const chartRef = useRef(null);\n  const candlestickSeriesRef = useRef(null);\n  const lineSeriesRef = useRef(null);\n  const [lastPrice, setLastPrice] = useState(null);\n\n  useEffect(() => {\n    if (chartContainerRef.current) {\n      // 차트 생성\n      const chart = createChart(chartContainerRef.current, {\n        width: chartContainerRef.current.clientWidth,\n        height: 400,\n        layout: {\n          background: { color: '#1E222D' },\n          textColor: '#DDD',\n        },\n        grid: {\n          vertLines: { color: '#2B2B43' },\n          horzLines: { color: '#363C4E' },\n        },\n        timeScale: {\n          timeVisible: true,\n          secondsVisible: false,\n        },\n      });\n\n      // 캔들스틱 시리즈 추가\n      const candlestickSeries = chart.addCandlestickSeries({\n        upColor: '#26a69a',\n        downColor: '#ef5350',\n        borderVisible: false,\n        wickUpColor: '#26a69a',\n        wickDownColor: '#ef5350',\n      });\n      \n      // 라인 시리즈 추가\n      const lineSeries = chart.addLineSeries({\n        color: '#2962FF',\n        lineWidth: 2,\n      });\n      \n      // 참조 저장\n      candlestickSeriesRef.current = candlestickSeries;\n      lineSeriesRef.current = lineSeries;\n\n      // 차트 리사이징 핸들러\n      const handleResize = () => {\n        if (chartContainerRef.current && chartRef.current) {\n          chartRef.current.applyOptions({ \n            width: chartContainerRef.current.clientWidth \n          });\n        }\n      };\n\n      // 데이터 가져오기\n      fetch('https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1h&limit=1000')\n        .then(res => res.json())\n        .then(data => {\n          const cdata = data.map(d => {\n            return {\n              time: d[0] / 1000,\n              open: parseFloat(d[1]),\n              high: parseFloat(d[2]),\n              low: parseFloat(d[3]),\n              close: parseFloat(d[4])\n            };\n          });\n          \n          // 캔들스틱 데이터 설정\n          candlestickSeries.setData(cdata);\n          \n          // 라인 시리즈 데이터 설정 (종가 기준)\n          const lineData = cdata.map(item => ({\n            time: item.time,\n            value: item.close\n          }));\n          lineSeries.setData(lineData);\n          \n          // 최신 가격 저장\n          if (cdata.length > 0) {\n            const lastCandle = cdata[cdata.length - 1];\n            setLastPrice(lastCandle.close);\n            \n            // 지지선과 저항선 계산 (간단한 예: 최근 종가의 ±5%)\n            const supportPrice = lastCandle.close * 0.95;\n            const resistancePrice = lastCandle.close * 1.05;\n            \n            // 가격선 추가\n            // 현재가 표시\n            candlestickSeries.createPriceLine({\n              price: lastCandle.close,\n              color: '#FFD700',\n              lineWidth: 2,\n              lineStyle: 0, // 실선\n              axisLabelVisible: true,\n              title: '현재가',\n            });\n            \n            // 지지선 표시\n            candlestickSeries.createPriceLine({\n              price: supportPrice,\n              color: '#26a69a',\n              lineWidth: 1,\n              lineStyle: 2, // 점선\n              axisLabelVisible: true,\n              title: '지지선',\n            });\n            \n            // 저항선 표시\n            candlestickSeries.createPriceLine({\n              price: resistancePrice,\n              color: '#ef5350',\n              lineWidth: 1,\n              lineStyle: 2, // 점선\n              axisLabelVisible: true,\n              title: '저항선',\n            });\n          }\n          \n          // 차트 표시 영역 조정\n          chart.timeScale().fitContent();\n        })\n        .catch(err => console.error('데이터 불러오기 오류:', err));\n\n      // 리사이징 이벤트 리스너 등록\n      window.addEventListener('resize', handleResize);\n      \n      // 참조 저장\n      chartRef.current = chart;\n\n      // 컴포넌트 언마운트 시 정리\n      return () => {\n        window.removeEventListener('resize', handleResize);\n        chart.remove();\n      };\n    }\n  }, []);\n\n  return (\n    <div>\n      <div \n        ref={chartContainerRef} \n        style={{ \n          width: '100%', \n          height: '400px',\n          marginBottom: '20px'\n        }}\n      />\n      {lastPrice && (\n        <div style={{ textAlign: 'center', marginBottom: '20px' }}>\n          <span style={{ color: '#FFD700', fontWeight: 'bold' }}>\n            현재 BTC/USDT 가격: ${lastPrice.toLocaleString()}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BTCChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}